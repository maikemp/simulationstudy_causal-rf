#! python
import json

sim_param = json.load(open('src/model_specs/simulation_parameters.json'), encoding='utf-8')
repetitions = [str(par) for par in range(sim_param['rep_number'])]
repetitions.extend(['test'])
n_list = [str(par) for par in sim_param['n_list']]


def build(ctx):

    # Illustrate simple use of run_py_script
    ctx(
        features='run_py_script',
        source='get_simulation_draws.py',
        target=ctx.path_to(ctx, 'OUT_DATA', 'initial_locations.csv'),
        name='get_simulation_draws'
    )
    
    for setup in sim_param["list_of_setups"]:

        for n in n_list:        
            
            for rep_number in repetitions:
                
                ctx(
                    features='run_py_script',
                    source='get_simulated_samples.py',
                    deps=[
                        ctx.path_to(ctx,'IN_MODEL_SPECS', '{}.json'.format(setup)),
                        ctx.path_to(ctx,'IN_MODEL_CODE', 'main_effect_functions.py'),
                        ctx.path_to(ctx,'IN_MODEL_CODE', 'treatment_effect_functions.py'),
                        ctx.path_to(ctx,'IN_MODEL_CODE', 'propensity_functions.py')
                    ],
                    target=[
                        ctx.path_to(ctx, 'OUT_DATA_' + setup.upper(), 'sample_{}_n={}_rep_{}.json'.format(setup, n, rep_number))
                    ],
                    append=[setup, n, rep_number],
                    name='sample_{}_n={}_rep_{}'.format(setup, n, rep_number)
                )

